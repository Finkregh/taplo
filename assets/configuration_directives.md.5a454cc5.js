import{_ as e,o as t,c as a,a as s}from"./app.71e74ad9.js";const u=JSON.parse('{"title":"Directives","description":"","frontmatter":{},"headers":[{"level":2,"title":"The schema Directive","slug":"the-schema-directive"}],"relativePath":"configuration/directives.md","lastUpdated":1655402809000}'),c={name:"configuration/directives.md"},i=s(`<h1 id="directives" tabindex="-1">Directives <a class="header-anchor" href="#directives" aria-hidden="true">#</a></h1><p>The behaviour of Taplo can be further customized by comments in TOML files called <code>directives</code>.</p><p>All directive comments must follow the following pattern: <code>#:&lt;name&gt; &lt;content&gt;</code>.</p><p>A <code>header</code> directive means that it is at the beginning of the document and can only be preceded by other directives or comments.</p><h2 id="the-schema-directive" tabindex="-1">The <code>schema</code> Directive <a class="header-anchor" href="#the-schema-directive" aria-hidden="true">#</a></h2><p>It is possible to override the schema for a specific document by using the <code>schema</code> header directive. A relative file path or an URL can be provided.</p><p>Example:</p><div class="language-toml"><span class="copy"></span><pre><code><span class="line"><span style="color:#676E95;font-style:italic;">#:schema ./foo-schema.json</span></span>
<span class="line"><span style="color:#A6ACCD;">foo </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">bar</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Relative paths are relative to the document file, if the file path is not known, Taplo will be unable to find the schema.</p></div><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>Multiple schema directives in the same document are not supported and the behaviour is undefined.</p></div>`,10),o=[i];function n(r,l,d,p,h,m){return t(),a("div",null,o)}var f=e(c,[["render",n]]);export{u as __pageData,f as default};
