import{_ as a,o as e,c as s,a as i}from"./app.d2cf350c.js";const u=JSON.parse('{"title":"Validation","description":"","frontmatter":{},"headers":[{"level":2,"title":"Schema Validation","slug":"schema-validation","link":"#schema-validation","children":[{"level":3,"title":"Using a Specific Schema","slug":"using-a-specific-schema","link":"#using-a-specific-schema","children":[]},{"level":3,"title":"Using a Schema Catalog","slug":"using-a-schema-catalog","link":"#using-a-schema-catalog","children":[]}]}],"relativePath":"cli/usage/validation.md","lastUpdated":1655402809000}'),t={name:"cli/usage/validation.md"},c=i(`<h1 id="validation" tabindex="-1">Validation <a class="header-anchor" href="#validation" aria-hidden="true">#</a></h1><p>Taplo supports validation of TOML files, by default it will only look for syntax errors and some semantic errors such as duplicate keys.</p><div class="language-sh"><button class="copy"></button><span class="lang">sh</span><pre><code><span class="line"><span style="color:#A6ACCD;">taplo check foo.toml</span></span>
<span class="line"></span></code></pre></div><h2 id="schema-validation" tabindex="-1">Schema Validation <a class="header-anchor" href="#schema-validation" aria-hidden="true">#</a></h2><p>Taplo supports validation via <a href="https://json-schema.org" target="_blank" rel="noreferrer">JSON Schemas</a> (Draft 4).</p><h3 id="using-a-specific-schema" tabindex="-1">Using a Specific Schema <a class="header-anchor" href="#using-a-specific-schema" aria-hidden="true">#</a></h3><div class="language-sh"><button class="copy"></button><span class="lang">sh</span><pre><code><span class="line"><span style="color:#A6ACCD;">taplo check --schema https://example.com/foo-schema.json foo.toml</span></span>
<span class="line"></span></code></pre></div><h3 id="using-a-schema-catalog" tabindex="-1">Using a Schema Catalog <a class="header-anchor" href="#using-a-schema-catalog" aria-hidden="true">#</a></h3><p>Taplo supports schema catalogs such as the <a href="https://www.schemastore.org/json/" target="_blank" rel="noreferrer">JSON Schema Store</a> for retrieving schemas and matching them to files via file names.</p><p>You can enable this by either specifying a catalog via the <code>--schema-catalog</code> flag, or enabling the use of the default catalogs via <code>--default-schema-catalogs</code>.</p>`,10),n=[c];function o(l,r,h,d,p,m){return e(),s("div",null,n)}const f=a(t,[["render",o]]);export{u as __pageData,f as default};
